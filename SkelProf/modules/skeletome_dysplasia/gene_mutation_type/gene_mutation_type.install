<?php
// $Id: gene_mutation_type.install $

function gene_mutation_type_install() {
  $t = get_t();

  $gene_mutation_type = array(
    'type' => 'gene_mutation_type',
    'name' => $t('Gene mutation type'),
    'base' => 'node_content',
    'description' => $t('The Gene mutation type content type.'),
    'body_label' => $t('Description')
  );

  $content_type = node_type_set_defaults($gene_mutation_type);
  node_type_save($content_type);

  foreach (_gene_mutation_type_installed_fields() as $field) {
    field_create_field($field);
  }

  foreach (_gene_mutation_type_installed_instances() as $instance) {
    $instance['entity_type'] = 'node';
    $instance['bundle'] = $gene_mutation_type['type'];
    field_create_instance($instance);
  }

  variable_set('comment_gene_mutation_type', COMMENT_NODE_CLOSED);
  variable_set('node_options_gene_mutation_type', array('status'));
  variable_set('node_preview_gene_mutation_type', DRUPAL_DISABLED);
  variable_set('node_submitted_gene_mutation_type', FALSE);

//  _import_gene_mutations($content_type);
}

function _import_gene_mutations($content_type) {
    $boneDysplasiaGroupNode = new stdClass();
    $boneDysplasiaGroupNode->type = $content_type->type;
    $boneDysplasiaGroupNode->title = 'title'; 
    $boneDysplasiaGroupNode->language = 'und'; 
    $boneDysplasiaGroupNode->uid = 1;
    $boneDysplasiaGroupNode->field_gene_mutation_type_uri[LANGUAGE_NONE][0]['value'] = 'test';
    node_save($boneDysplasiaGroupNode);
}

function _gene_mutation_type_installed_fields() {
  $t = get_t();
  return array(
    'field_gm_type_gene_mutation' => array(
      'field_name'	=> 'field_gm_type_gene_mutation',
      'label'		=> $t('Gene Mutation'),
      'cardinality'	=> -1,
      'type'		=> 'node_reference',
      'settings'	=> array(
	'referenceable_types' => array(
	  'gene_mutation' => 'gene_mutation'
	)
      )
    ),
    'field_gm_type_subtype' => array(
      'field_name'	=> 'field_gm_type_subtype',
      'label'		=> $t('Gene Mutation sub-type'),
      'cardinality'	=> -1,
      'type'		=> 'node_reference',
      'settings'	=> array(
	'referenceable_types' => array(
	  'gene_mutation_type' => 'gene_mutation_type'
	)
      )
    ),
    'field_gm_type_supertype' => array(
      'field_name'	=> 'field_gm_type_supertype',
      'label'		=> $t('Gene Mutation super-type'),
      'cardinality'	=> 1,
      'type'		=> 'node_reference',
      'settings'	=> array(
	'referenceable_types' => array(
	  'gene_mutation_type' => 'gene_mutation_type'
	)
      )
    ),
    'field_gene_mutation_type_uri' => array(
      'field_name'	=> 'field_gene_mutation_type_uri',
      'label'		=> t('URI'),
      'cardinality'	=> 1,
      'type'		=> 'text',
      'settings'	=> array(
        'max_length' => 500,
      )
    ),
    'field_gene_mutation_type_umls' => array(
      'field_name'	=> 'field_gene_mutation_type_umls',
      'label'		=> t('UMLS CUI'),
      'cardinality'	=> -1,
      'type'		=> 'text',
      'settings'	=> array(
        'max_length' => 500,
      )
    ),
  );
}

function _gene_mutation_type_installed_instances() {
  $t = get_t();
  return array(
    'field_gm_type_gene_mutation' => array(
      'field_name'	=> 'field_gm_type_gene_mutation',
      'label'		=> $t('Gene Mutation'),
      'cardinality'	=> -1,
      'widget'		=> array(
        'type'    => 'node_reference_autocomplete',
      ),
      'display' => array(
	'default' => array(
	  'type'  => 'hidden',
	  'label' => 'hidden',
	),
        'full' => array(
          'type' => 'hidden',
          'label' => 'hidden',
        ),
        'teaser' => array(
          'type' => 'hidden',
          'label' => 'hidden',
        ),
      )
    ),
    'field_gm_type_subtype' => array(
      'field_name'	=> 'field_gm_type_subtype',
      'label'		=> $t('Gene Mutation sub-type'),
      'cardinality'	=> -1,
      'widget'		=> array(
        'type'    => 'node_reference_autocomplete',
      ),
      'display' => array(
	'default' => array(
	  'type'  => 'hidden',
	  'label' => 'hidden',
	),
        'full' => array(
          'type' => 'hidden',
          'label' => 'hidden',
        ),
        'teaser' => array(
          'type' => 'hidden',
          'label' => 'hidden',
        ),
      )
    ),
    'field_gm_type_supertype' => array(
      'field_name'	=> 'field_gm_type_supertype',
      'label'		=> $t('Gene Mutation super-type'),
      'cardinality'	=> 1,
      'widget'		=> array(
        'type'    => 'node_reference_autocomplete',
      ),
      'display' => array(
	'default' => array(
	  'type'  => 'hidden',
	  'label' => 'hidden',
	),
        'full' => array(
          'type' => 'hidden',
          'label' => 'hidden',
        ),
        'teaser' => array(
          'type' => 'hidden',
          'label' => 'hidden',
        ),
      )
    ),
    'field_gene_mutation_type_uri' => array(
      'field_name' => 'field_gene_mutation_type_uri',
      'label'       => $t('URI'),
      'cardinality' => 1,
      'widget'      => array(
        'type'    => 'text_textfield',
      ),
      'display' => array(
	'default' => array(
	  'type'  => 'hidden',
	  'label' => 'hidden',
	),
        'full' => array(
          'type' => 'hidden',
          'label' => 'hidden',
        ),
        'teaser' => array(
          'type' => 'hidden',
          'label' => 'hidden',
        ),
      )
    ),
    'field_gene_mutation_type_umls' => array(
      'field_name' => 'field_gene_mutation_type_umls',
      'label'       => $t('UMLS CUI'),
      'cardinality' => -1,
      'widget'      => array(
        'type'    => 'text_textfield',
      ),
      'display' => array(
	'default' => array(
	  'type'  => 'hidden',
	  'label' => 'hidden',
	),
        'full' => array(
          'type' => 'hidden',
          'label' => 'hidden',
        ),
        'teaser' => array(
          'type' => 'hidden',
          'label' => 'hidden',
        ),
      )
    ),
  );
}

function gene_mutation_type_uninstall() {
  $sql = 'SELECT nid FROM {node} n WHERE n.type = :type';
  $result = db_query($sql, array(':type' => 'gene_mutation_type'));
  $nids = array();
  foreach ($result as $row) {
    $nids[] = $row->nid;
  }

  node_delete_multiple($nids);

  foreach (array_keys(_gene_mutation_type_installed_fields()) as $field) {
    field_delete_field($field);
  }

  $instances = field_info_instances('node', 'gene_mutation_type');
  foreach ($instances as $instance_name => $instance) {
    field_delete_instance($instance);
  }

  node_type_delete('gene_mutation_type');

  field_purge_batch(1000);
}
