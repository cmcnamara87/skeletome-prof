<?php
// $Id: genetic_report.module $

define('__GENREP_PREFIX__', 'http://skeletome.org/genreport/');

function genetic_report_form_genetic_report_node_form_alter(&$form, &$form_state, $form_id) {
if (isset($form['type']) && isset($form['#node'])) {
    if ('genetic_report_node_form' == $form_id) {
      $form['field_genrep_patient']['#access'] = FALSE;
      $form['field_genrep_gm']['#access'] = FALSE;
      $form['field_genrep_uri']['#access'] = FALSE;
      $form['group_audience']['#access'] = FALSE;
      $form['group_content_access']['#access'] = FALSE;
    }
  }
}

function genetic_report_node_insert($node) {
  if ($node->type == 'genetic_report') {
    if (arg(3) != NULL) {
      $patient_node = node_load(arg(3));
      if (array_key_exists('und', $patient_node->field_patient_genrep)) {
	$count = count($patient_node->field_patient_genrep['und']);
      } else {
	$count = 0;
      }

      $patient_node->field_patient_genrep['und'][$count]['nid'] = $node->nid;
      node_save($patient_node);
    }
  }
}

function genetic_report_node_presave($node) {
  if ($node->type == 'genetic_report') {
    if (arg(3) != NULL) {
      if (is_numeric(arg(3))) {
	$patient_node = node_load(arg(3));

	if (gettype($patient_node) === 'object') {
	  if (property_exists($patient_node, 'type')) {
	
	    if ($patient_node->type === 'patient') {
	      if (property_exists($node, 'field_genrep_patient')) {
		$node->field_genrep_patient['und'][0]['nid'] = $patient_node->nid;
		$node->group_content_access['und'][0]['value'] = $patient_node->group_content_access['und'][0]['value']; 

		if (array_key_exists('und', $patient_node->group_audience)) {
		  $group_audience = $patient_node->group_audience['und'];
		  $count = 0;
		  foreach ($group_audience as $ga) {
		    $node->group_audience['und'][$count]['gid'] = $ga['gid'];
		    $node->group_audience['und'][$count]['state'] = $ga['state'];
		    $node->group_audience['und'][$count]['created'] = $ga['created'];
		    $count++;
		  }
		}
	      }
	    }

	  }
	}
      }
    }
  }
}

function genetic_report_node_view($node, $view_mode) {
  if ($node->type == 'genetic_report' && $view_mode == 'full' && node_is_page($node)) {
    drupal_goto('node/' . $node->field_genrep_patient['und'][0]['nid'] . '/genetic-reports');
  }

  return $node;
}

function genetic_report_node_delete($node) {
  if ($node->type == 'genetic_report') {
    if (!empty($node->field_genrep_patient['und'])) {
      $patient_node = node_load($node->field_genrep_patient['und'][0]['nid']);
      $gen_reps = $patient_node->field_patient_genrep['und'];

      $idx = -1;
      foreach ($gen_reps as $pos => $val) {
	if ($val['nid'] == $node->nid) {
	  $idx = $pos;
	  break;
	}
      }
      if ($idx != -1) {
	array_splice($patient_node->field_patient_genrep['und'], $idx, 1);
	node_save($patient_node);
      }
    }

    if (!empty($node->field_genrep_gm['und'])) {
      $gms = $node->field_genrep_gm['und'];
      for ($i = 0; $i < count($gms); $i++) {
	node_delete($gms[$i]['nid']);
      }
    }
  }
}